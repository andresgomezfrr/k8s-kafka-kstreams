---
apiVersion: v1
kind: Service
metadata:
  name: kafka-http
spec:
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
  type: LoadBalancer
  selector:
    app: kafka-http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-http
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: kafka-http
  template:
    metadata:
      labels:
        app: kafka-http
    spec:
      containers:
      - name: kafka-http
        image: confluentinc/cp-kafka-rest:6.1.1
        imagePullPolicy: Always
        env:
        - name: KAFKA_REST_BOOTSTRAP_SERVERS
          value: "kafka-hs:9092"
        ports:
        - containerPort: 8082
        readinessProbe:
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
          httpGet:
            path: /
            port: 8082
        livenessProbe:
          initialDelaySeconds: 20
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3
          httpGet:
            path: /
            port: 8082
        resources:
          requests:
            memory: "250Mi"
            cpu: "250m"
          limits:
            memory: "500Mi"
            cpu: "500m"
      restartPolicy: Always
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: kafka-http
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: kafka-http
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
